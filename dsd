[1mdiff --git a/.Rbuildignore b/.Rbuildignore[m
[1mindex 91114bf..8080423 100644[m
[1m--- a/.Rbuildignore[m
[1m+++ b/.Rbuildignore[m
[36m@@ -1,2 +1,2 @@[m
 ^.*\.Rproj$[m
[31m-^\.Rproj\.user$[m
[32m+[m[32m^\.Rproj\.user$[m
\ No newline at end of file[m
[1mdiff --git a/R/CalltouchCalls.R b/R/CalltouchCalls.R[m
[1mindex c366ddc..07b9ce0 100644[m
[1m--- a/R/CalltouchCalls.R[m
[1m+++ b/R/CalltouchCalls.R[m
[36m@@ -9,7 +9,7 @@[m [mCalltouchCalls <- function ([m
   ## Проверка на наличие необходимых параметров[m
   if (is.null(id) | is.null(token)) {[m
     stop([m
[31m-      "Token or ID is not defined (Токен или ID не указаны)"[m
[32m+[m[32m      "Token or ID is not defined"[m
     )[m
   }[m
   ## Настройка опций среды обработки чтобы строки имели класс фактора[m
[36m@@ -32,29 +32,35 @@[m [mCalltouchCalls <- function ([m
   ## Парсим полученный ответ[m
   total <- dataRaw$recordsTotal[m
 [m
[31m-  limit <- 12[m
[32m+[m[32m  limit <- 1000[m
   page <- total %/% limit[m
   offset <- total %% limit[m
   if (offset == 0) page <- page - 1[m
   result <- data.frame(stringsAsFactors = F)[m
[31m-[m
[32m+[m[32m  callall <- list()[m
   ## Создает основной GET запрос к API Колтача для сбора данных[m
   for (i in 0:page)[m
   {[m
[31m-    url <- paste0(server,"calls-service/RestAPI/",id,"/calls-diary/calls?clientApiId=",[m
[31m-                  token,"&dateFrom=",dateFrom,"&dateTo=",dateTo,"&page=",i+1,"&limit=",limit)[m
[31m-    answer <- GET(url)[m
[32m+[m[32m    url2 <-paste0(server,"calls-service/RestAPI/",id,"/calls-diary/calls?clientApiId=",[m
[32m+[m[32m                  token,"&dateFrom=",dateFrom,"&dateTo=",dateTo,"&page=",i+1,"&limit=",limit,"&withCallTags=true")[m
[32m+[m[32m    answer <- GET(url2)[m
     dataRaw <- content(answer)[m
[31m-    dataRaw <- dataRaw$records[m
[31m-    if (length(dataRaw) > 0)[m
[31m-    {[m
[31m-      column_names <- unlist(lapply(c(names(dataRaw[[1]])), function(x) return(x)))[m
[31m-      rows <- lapply(dataRaw, function(x) return(x))[m
[31m-      rows <- setNames(object = data.frame(do.call(rbind, lapply(rows, as.character, unlist))), nm = names(rows[[1]]))[m
[31m-      rows <- replace(rows, rows=="NULL", NA)[m
[31m-      result <- rbind(result,rows)[m
[31m-    }[m
[31m-    packageStartupMessage(".", appendLF = F)[m
[32m+[m[32m    staff_dict <- tibble(first = dataRaw)[m
[32m+[m
[32m+[m[32m    callall <- c(callall, list(staff_dict[5,] %>%[m
[32m+[m[32m                                 unnest_longer(employee) %>%[m
[32m+[m[32m                                 unnest_wider(employee)[m
[32m+[m[32m    ))[m
[32m+[m
   }[m
[31m-  return(result)[m
[32m+[m[32m  callall <- bind_rows(callall)[m
[32m+[m
[32m+[m[32m  try(callall <- callall %>%[m
[32m+[m[32m        unnest_longer(callTags)%>%[m
[32m+[m[32m        unnest_wider(callTags)%>%[m
[32m+[m[32m        select(-category, -type)%>%[m
[32m+[m[32m        unnest_longer(names)%>%[m
[32m+[m[32m        rename(callTags=names), silent = T)[m
[32m+[m
[32m+[m[32m  return(callall)[m
 }[m
[1mdiff --git a/README.Rmd b/README.Rmd[m
[1mnew file mode 100644[m
[1mindex 0000000..9d6451b[m
[1m--- /dev/null[m
[1m+++ b/README.Rmd[m
[36m@@ -0,0 +1,60 @@[m
[32m+[m[32m---[m
[32m+[m[32moutput: github_document[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m<!-- README.md is generated from README.Rmd. Please edit that file -->[m
[32m+[m
[32m+[m[32m```{r, include = FALSE}[m
[32m+[m[32mknitr::opts_chunk$set([m
[32m+[m[32m  collapse = TRUE,[m
[32m+[m[32m  comment = "#>",[m
[32m+[m[32m  fig.path = "man/figures/README-",[m
[32m+[m[32m  out.width = "100%"[m
[32m+[m[32m)[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m# calltouchr[m
[32m+[m
[32m+[m[32m<!-- badges: start -->[m
[32m+[m[32m<!-- badges: end -->[m
[32m+[m
[32m+[m[32mThe goal of calltouchr is to ...[m
[32m+[m
[32m+[m[32m## Installation[m
[32m+[m
[32m+[m[32mYou can install the released version of calltouchr from [CRAN](https://CRAN.R-project.org) with:[m
[32m+[m
[32m+[m[32m``` r[m
[32m+[m[32minstall.packages("calltouchr")[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAnd the development version from [GitHub](https://github.com/) with:[m
[32m+[m
[32m+[m[32m``` r[m
[32m+[m[32m# install.packages("devtools")[m
[32m+[m[32mdevtools::install_github("bnepryakhin63/calltouchr")[m
[32m+[m[32m```[m
[32m+[m[32m## Example[m
[32m+[m
[32m+[m[32mThis is a basic example which shows you how to solve a common problem:[m
[32m+[m
[32m+[m[32m```{r example}[m
[32m+[m[32mlibrary(calltouchr)[m
[32m+[m[32m## basic example code[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mWhat is special about using `README.Rmd` instead of just `README.md`? You can include R chunks like so:[m
[32m+[m
[32m+[m[32m```{r cars}[m
[32m+[m[32msummary(cars)[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mYou'll still need to render `README.Rmd` regularly, to keep `README.md` up-to-date.[m
[32m+[m
[32m+[m[32mYou can also embed plots, for example:[m
[32m+[m
[32m+[m[32m```{r pressure, echo = FALSE}[m
[32m+[m[32mplot(pressure)[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mIn that case, don't forget to commit and push the resulting figure files, so they display on GitHub![m
[1mdiff --git a/README.md b/README.md[m
[1mindex 68037f3..027b800 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -1,2 +1,3 @@[m
 # calltouchr[m
  Package for downloading data on calls and their effectiveness from the service calltouch.ru[m
[32m+[m[32m usethis::use_readme_rmd()[m
